package com.mvctwo;

import java.io.*;
import java.util.*;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Controller")
public class Controller extends HttpServlet {
	private static final long serialVersionUID = 1L;

	//명령어와 명령어 처리 클래스를 쌍으로 저장
	private Map<String, Object> commandMap = new HashMap<String, Object>();
	
	/* 명령어와 처리클래스가 매핑되어 있는 Command.properties 파일을 읽어서
	 * Map 객체인 commandMap에 저장함
	 * */
	
	public void init(ServletConfig config) throws ServletException {
		//web.xml 파일에서 init-param 태그의 파라미터 이름인
		//propertyConfig에 해당하는 값을 읽어옴
		String props = config.getInitParameter("propertyConfig");
		
		//명령어와 처리클래스의 매핑정보를 저장할 Properties 객체를 생성함
		Properties pr = new Properties();
		
		String path = config.getServletContext().getRealPath("/WEB-INF");
		
		FileInputStream f = null;
		
		try {
			//Command.Pproperties 파일의 내용을 읽어옴
			f = new FileInputStream(null)
		} catch (Exception e) {
			// TODO: handle exception
		}
	}

	protected void requestPro(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
	}
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		requestPro(request,response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		requestPro(request,response);
	}

}
